// Generated by stratus_hls 19.12-s100  (91710.131054)
// Tue Apr 12 21:20:35 2022
// from ../GaussFilter.cpp
#include "GaussFilter_rtl.h"

struct GaussFilter;
GaussFilter::GaussFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_rgb_busy("o_rgb_busy")
    ,o_rgb_vld("o_rgb_vld")
    ,o_rgb_data("o_rgb_data")
    ,o_rgb_m_req_m_prev_trig_req("o_rgb_m_req_m_prev_trig_req")
    ,GaussFilter_Xor_1Ux1U_1U_1_1_out1("GaussFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_rgb_m_unacked_req("o_rgb_m_unacked_req")
    ,GaussFilter_Or_1Ux1U_1U_4_2_out1("GaussFilter_Or_1Ux1U_1U_4_2_out1")
    ,GaussFilter_N_Muxb_1_2_2_4_4_out1("GaussFilter_N_Muxb_1_2_2_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,GaussFilter_gen_busy_r_4_38_gen_busy_i_rgb_m_data_is_invalid_next("GaussFilter_gen_busy_r_4_38_gen_busy_i_rgb_m_data_is_invalid_next")
    ,GaussFilter_gen_busy_r_4_38_gdiv("GaussFilter_gen_busy_r_4_38_gdiv")
    ,GaussFilter_gen_busy_r_4_38_gnew_req("GaussFilter_gen_busy_r_4_38_gnew_req")
    ,global_state_next("global_state_next")
    ,GaussFilter_LessThan_29Sx9S_1U_4_23_out1("GaussFilter_LessThan_29Sx9S_1U_4_23_out1")
    ,GaussFilter_N_Mux_29_2_0_4_22_out1("GaussFilter_N_Mux_29_2_0_4_22_out1")
    ,GaussFilter_N_Mux_29_2_0_4_22_ctrl1("GaussFilter_N_Mux_29_2_0_4_22_ctrl1")
    ,GaussFilter_Add_28Sx1U_29S_4_21_out1("GaussFilter_Add_28Sx1U_29S_4_21_out1")
    ,GaussFilter_Add_28Sx1U_29S_4_21_in2("GaussFilter_Add_28Sx1U_29S_4_21_in2")
    ,GaussFilter_And_1Ux1U_1U_4_18_out1("GaussFilter_And_1Ux1U_1U_4_18_out1")
    ,GaussFilter_And_1Ux1U_1U_4_18_in1("GaussFilter_And_1Ux1U_1U_4_18_in1")
    ,gs_ctrl5("gs_ctrl5")
    ,GaussFilter_Add_32Ux32U_32U_4_11_in1("GaussFilter_Add_32Ux32U_32U_4_11_in1")
    ,GaussFilter_Mul_32Sx8U_32S_4_10_out1("GaussFilter_Mul_32Sx8U_32S_4_10_out1")
    ,GaussFilter_Mul_32Sx8U_32S_4_10_in1("GaussFilter_Mul_32Sx8U_32S_4_10_in1")
    ,gs_ctrl3("gs_ctrl3")
    ,GaussFilter_Mul_32Sx8U_32S_4_10_in2("GaussFilter_Mul_32Sx8U_32S_4_10_in2")
    ,gs_ctrl2("gs_ctrl2")
    ,GaussFilter_Add_4Ux2U_4U_4_8_out1("GaussFilter_Add_4Ux2U_4U_4_8_out1")
    ,GaussFilter_Add_2Ux1U_2U_4_7_in2("GaussFilter_Add_2Ux1U_2U_4_7_in2")
    ,GaussFilter_Mul_2Ux2U_4U_4_6_in2("GaussFilter_Mul_2Ux2U_4U_4_6_in2")
    ,gs_ctrl0("gs_ctrl0")
    ,GaussFilter_OrReduction_4U_1U_4_26_out1("GaussFilter_OrReduction_4U_1U_4_26_out1")
    ,GaussFilter_OrReduction_4U_1U_4_20_out1("GaussFilter_OrReduction_4U_1U_4_20_out1")
    ,GaussFilter_OrReduction_4U_1U_4_14_out1("GaussFilter_OrReduction_4U_1U_4_14_out1")
    ,s_reg_32("s_reg_32")
    ,s_reg_31("s_reg_31")
    ,GaussFilter_Add_2Ux1U_2U_4_9_out1("GaussFilter_Add_2Ux1U_2U_4_9_out1")
    ,GaussFilter_Add_2Ux1U_2U_4_7_out1("GaussFilter_Add_2Ux1U_2U_4_7_out1")
    ,s_reg_29("s_reg_29")
    ,GaussFilter_Mul_2Ux2U_4U_4_6_out1("GaussFilter_Mul_2Ux2U_4U_4_6_out1")
    ,s_reg_27("s_reg_27")
    ,s_reg_26("s_reg_26")
    ,GaussFilter_Add_32Ux32U_32U_4_11_out1("GaussFilter_Add_32Ux32U_32U_4_11_out1")
    ,s_reg_25("s_reg_25")
    ,s_reg_30("s_reg_30")
    ,s_reg_24("s_reg_24")
    ,GaussFilter_gen_busy_r_4_38_out1("GaussFilter_gen_busy_r_4_38_out1")
    ,GaussFilter_And_1Ux1U_1U_4_36_out1("GaussFilter_And_1Ux1U_1U_4_36_out1")
    ,GaussFilter_Not_1U_1U_1_3_out1("GaussFilter_Not_1U_1U_1_3_out1")
    ,o_rgb_m_req_m_trig_req("o_rgb_m_req_m_trig_req")
    ,GaussFilter_LessThan_2Ux2U_1U_4_19_out1("GaussFilter_LessThan_2Ux2U_1U_4_19_out1")
    ,GaussFilter_LessThan_2Ux2U_1U_4_17_out1("GaussFilter_LessThan_2Ux2U_1U_4_17_out1")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,GaussFilter_N_Mux_8_2_1_4_24_out1("GaussFilter_N_Mux_8_2_1_4_24_out1")
    ,s_reg_33("s_reg_33")
    ,s_reg_28("s_reg_28")
    ,global_state("global_state")
    ,stall0("stall0")
    ,mask_in1("mask_in1")
    ,mask_out1("mask_out1")
{
  mask = new GaussFilter_ROM_9X32_mask("mask");
  mask->in1(mask_in1);
  mask->out1(mask_out1);
  mask->clk(i_clk);

  SC_METHOD(drive_o_rgb_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_rgb_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( GaussFilter_gen_busy_r_4_38_out1 );
  sensitive << ( GaussFilter_And_1Ux1U_1U_4_36_out1 );

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_30);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_32);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_33);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_GaussFilter_Mul_2Ux2U_4U_4_6_in2);
  sensitive << ( gs_ctrl0 );
  sensitive << ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1 );
  sensitive << ( s_reg_29 );

  SC_METHOD(GaussFilter_Mul_2Ux2U_4U_4_6);
  sensitive << ( GaussFilter_Mul_2Ux2U_4U_4_6_in2 );

  SC_METHOD(drive_GaussFilter_Add_2Ux1U_2U_4_7_in2);
  sensitive << ( gs_ctrl0 );
  sensitive << ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1 );
  sensitive << ( s_reg_29 );

  SC_METHOD(GaussFilter_Add_2Ux1U_2U_4_7);
  sensitive << ( GaussFilter_Add_2Ux1U_2U_4_7_in2 );

  SC_METHOD(GaussFilter_Add_4Ux2U_4U_4_8);
  sensitive << ( s_reg_24 );
  sensitive << ( s_reg_28 );

  SC_METHOD(GaussFilter_Add_2Ux1U_2U_4_9);
  sensitive << ( s_reg_24 );

  SC_METHOD(drive_mask_in1);
  sensitive << ( GaussFilter_Add_4Ux2U_4U_4_8_out1 );

  SC_METHOD(drive_GaussFilter_Mul_32Sx8U_32S_4_10_in2);
  sensitive << ( gs_ctrl2 );
  sensitive << ( s_reg_31 );
  sensitive << ( mask_out1 );

  SC_METHOD(drive_GaussFilter_Mul_32Sx8U_32S_4_10_in1);
  sensitive << ( gs_ctrl3 );
  sensitive << ( o_rgb_data );

  SC_METHOD(GaussFilter_Mul_32Sx8U_32S_4_10);
  sensitive << ( GaussFilter_Mul_32Sx8U_32S_4_10_in1 );
  sensitive << ( GaussFilter_Mul_32Sx8U_32S_4_10_in2 );

  SC_METHOD(drive_GaussFilter_Add_32Ux32U_32U_4_11_in1);
  sensitive << ( gs_ctrl3 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_27 );

  SC_METHOD(GaussFilter_Add_32Ux32U_32U_4_11);
  sensitive << ( GaussFilter_Add_32Ux32U_32U_4_11_in1 );
  sensitive << ( GaussFilter_Mul_32Sx8U_32S_4_10_out1 );

  SC_METHOD(GaussFilter_OrReduction_4U_1U_4_14);
  sensitive << ( s_reg_25 );

  SC_METHOD(GaussFilter_LessThan_2Ux2U_1U_4_17);
  sensitive << ( s_reg_29 );

  SC_METHOD(drive_GaussFilter_And_1Ux1U_1U_4_18_in1);
  sensitive << ( gs_ctrl5 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_27 );

  SC_METHOD(GaussFilter_And_1Ux1U_1U_4_18);
  sensitive << ( GaussFilter_And_1Ux1U_1U_4_18_in1 );
  sensitive << ( s_reg_32 );

  SC_METHOD(GaussFilter_LessThan_2Ux2U_1U_4_19);
  sensitive << ( s_reg_30 );

  SC_METHOD(GaussFilter_OrReduction_4U_1U_4_20);
  sensitive << ( s_reg_26 );

  SC_METHOD(drive_GaussFilter_Add_28Sx1U_29S_4_21_in2);
  sensitive << ( gs_ctrl5 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_26 );
  sensitive << ( s_reg_27 );

  SC_METHOD(GaussFilter_Add_28Sx1U_29S_4_21);
  sensitive << ( GaussFilter_And_1Ux1U_1U_4_18_out1 );
  sensitive << ( GaussFilter_Add_28Sx1U_29S_4_21_in2 );

  SC_METHOD(drive_GaussFilter_N_Mux_29_2_0_4_22_ctrl1);
  sensitive << ( GaussFilter_Add_28Sx1U_29S_4_21_out1 );

  SC_METHOD(GaussFilter_N_Mux_29_2_0_4_22);
  sensitive << ( GaussFilter_N_Mux_29_2_0_4_22_ctrl1 );
  sensitive << ( GaussFilter_Add_28Sx1U_29S_4_21_out1 );

  SC_METHOD(GaussFilter_LessThan_29Sx9S_1U_4_23);
  sensitive << ( GaussFilter_N_Mux_29_2_0_4_22_out1 );

  SC_METHOD(GaussFilter_N_Mux_8_2_1_4_24);
  sensitive << ( GaussFilter_LessThan_29Sx9S_1U_4_23_out1 );
  sensitive << ( GaussFilter_N_Mux_29_2_0_4_22_out1 );

  SC_METHOD(GaussFilter_OrReduction_4U_1U_4_26);
  sensitive << ( s_reg_27 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1 );
  sensitive << ( GaussFilter_LessThan_2Ux2U_1U_4_19_out1 );

  SC_METHOD(drive_gs_ctrl0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl2);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl3);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( GaussFilter_gen_busy_r_4_38_out1 );

  SC_METHOD(GaussFilter_gen_busy_r_4_38_p8);
  sensitive << ( 
  GaussFilter_gen_busy_r_4_38_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( GaussFilter_gen_busy_r_4_38_gdiv );
  sensitive << ( GaussFilter_gen_busy_r_4_38_gnew_req );

  SC_METHOD(GaussFilter_gen_busy_r_4_38_p7);
  sensitive << ( GaussFilter_gen_busy_r_4_38_gdiv );

  SC_METHOD(GaussFilter_gen_busy_r_4_38_p6);
  sensitive << ( GaussFilter_gen_busy_r_4_38_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(GaussFilter_gen_busy_r_4_38_p5);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(GaussFilter_N_Muxb_1_2_2_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_rgb_vld);
  sensitive << ( GaussFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(GaussFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( GaussFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_rgb_m_unacked_req );

  SC_METHOD(drive_o_rgb_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(GaussFilter_And_1Ux1U_1U_4_36);
  sensitive << ( o_rgb_vld );
  sensitive << ( o_rgb_busy );

  SC_METHOD(GaussFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_rgb_m_req_m_prev_trig_req );
  sensitive << ( o_rgb_m_req_m_trig_req );

  SC_METHOD(drive_o_rgb_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(GaussFilter_Not_1U_1U_1_3);
  sensitive << ( o_rgb_m_req_m_trig_req );

}
// resource: mux_24bx2i0c
// resource: regr_en_24
void GaussFilter::drive_o_rgb_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 1ULL: 
      o_rgb_data = i_rgb_data.read();
      break;
    case 7ULL: 
      o_rgb_data = ( (sc_uint<24> )(sc_bv<24>)((sc_bv<8>)(
                   GaussFilter_N_Mux_8_2_1_4_24_out1.read()), 
                   (sc_bv<16>)((sc_bv<8>)(s_reg_33.read()), 
                   (sc_bv<8>)(s_reg_28.read()))) );
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void GaussFilter::drive_i_rgb_m_busy_req_0(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state.read()) ) {
      case 0ULL: case 9ULL: 
        i_rgb_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        i_rgb_m_busy_req_0 = 1ULL;
        break;
      case 5ULL: 
        if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() ) {
          i_rgb_m_busy_req_0 = 0ULL;
        } else {
          if ( GaussFilter_LessThan_2Ux2U_1U_4_19_out1.read() ) {
            i_rgb_m_busy_req_0 = 0ULL;
          } 
        }
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void GaussFilter::drive_o_rgb_m_req_m_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_rgb_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state.read()) ) {
      case 7ULL: 
        o_rgb_m_req_m_trig_req = (sc_uint<1> ) (GaussFilter_Not_1U_1U_1_3_out1
                                 .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void GaussFilter::drive_stall0(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = (sc_uint<1> )GaussFilter_gen_busy_r_4_38_out1.read();
    break;
  case 8ULL: 
    stall0 = GaussFilter_And_1Ux1U_1U_4_36_out1.read();
    break;
  }
}
// resource: mux_2bx2i1c
// resource: regr_en_2
void GaussFilter::drive_s_reg_24(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 9ULL: 
      s_reg_24 = 0ULL;
      break;
    case 5ULL: 
      if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() );
      else {
        s_reg_24 = s_reg_30.read();
      }
      break;
    }
    break;
  }
}
// resource: mux_32bx2i1c
// resource: regr_en_32
void GaussFilter::drive_s_reg_25(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 9ULL: 
      s_reg_25 = 0ULL;
      break;
    case 2ULL: 
      s_reg_25 = (sc_uint<32> ) (GaussFilter_Add_32Ux32U_32U_4_11_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx2i1c
// resource: regr_en_32
void GaussFilter::drive_s_reg_26(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 9ULL: 
      s_reg_26 = 0ULL;
      break;
    case 3ULL: 
      s_reg_26 = (sc_uint<32> ) (GaussFilter_Add_32Ux32U_32U_4_11_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_32bx2i1c
// resource: regr_en_32
void GaussFilter::drive_s_reg_27(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 9ULL: 
      s_reg_27 = 0ULL;
      break;
    case 4ULL: 
      s_reg_27 = (sc_uint<32> ) (GaussFilter_Add_32Ux32U_32U_4_11_out1.read());
      break;
    }
    break;
  }
}
// resource: mux_8bx2i0c
// resource: regr_en_8
void GaussFilter::drive_s_reg_28(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 9ULL: 
      s_reg_28 = (sc_uint<8> ) (GaussFilter_Mul_2Ux2U_4U_4_6_out1.read());
      break;
    case 5ULL: 
      if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() ) {
        s_reg_28 = (sc_uint<8> ) (GaussFilter_Mul_2Ux2U_4U_4_6_out1.read());
      } else {
        if ( GaussFilter_LessThan_2Ux2U_1U_4_19_out1.read() ) {
          s_reg_28 = (sc_uint<8> ) (GaussFilter_Mul_2Ux2U_4U_4_6_out1.read());
        } else {
          s_reg_28 = GaussFilter_N_Mux_8_2_1_4_24_out1.read();
        }
      }
      break;
    }
    break;
  }
}
// resource: regr_en_2
void GaussFilter::drive_s_reg_29(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 5ULL: case 9ULL: 
      s_reg_29 = (sc_uint<2> ) (GaussFilter_Add_2Ux1U_2U_4_7_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_2
void GaussFilter::drive_s_reg_30(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_30 = (sc_uint<2> ) (GaussFilter_Add_2Ux1U_2U_4_9_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_32
void GaussFilter::drive_s_reg_31(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      s_reg_31 = mask_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_1bx3i0c
// resource: regr_en_1
void GaussFilter::drive_s_reg_32(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 4ULL: 
      s_reg_32 = GaussFilter_OrReduction_4U_1U_4_14_out1.read();
      break;
    case 5ULL: 
      s_reg_32 = GaussFilter_OrReduction_4U_1U_4_20_out1.read();
      break;
    case 6ULL: 
      s_reg_32 = GaussFilter_OrReduction_4U_1U_4_26_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void GaussFilter::drive_s_reg_33(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    s_reg_33 = GaussFilter_N_Mux_8_2_1_4_24_out1.read();
    break;
  }
}
// resource: mux_2bx2i1c
void GaussFilter::drive_GaussFilter_Mul_2Ux2U_4U_4_6_in2(){
  if ( gs_ctrl0.read() ) {
    if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() ) {
      GaussFilter_Mul_2Ux2U_4U_4_6_in2 = s_reg_29.read();
    } else {
      GaussFilter_Mul_2Ux2U_4U_4_6_in2 = 0ULL;
    }
  } else {
    GaussFilter_Mul_2Ux2U_4U_4_6_in2 = 0ULL;
  }
}
// resource: GaussFilter_Mul_2Ux2U_4U_4  instance: GaussFilter_Mul_2Ux2U_4U_4_6
void GaussFilter::GaussFilter_Mul_2Ux2U_4U_4_6(){
  GaussFilter_Mul_2Ux2U_4U_4_6_out1 = GaussFilter_Mul_2Ux2U_4U_4_6_in2.read() * 
                                      3ULL;
}
// resource: mux_2bx2i1c
void GaussFilter::drive_GaussFilter_Add_2Ux1U_2U_4_7_in2(){
  if ( gs_ctrl0.read() ) {
    if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() ) {
      GaussFilter_Add_2Ux1U_2U_4_7_in2 = (sc_uint<2> ) (s_reg_29.read());
    } else {
      GaussFilter_Add_2Ux1U_2U_4_7_in2 = 0ULL;
    }
  } else {
    GaussFilter_Add_2Ux1U_2U_4_7_in2 = 0ULL;
  }
}
// resource: GaussFilter_Add_2Ux1U_2U_4  instance: GaussFilter_Add_2Ux1U_2U_4_7
void GaussFilter::GaussFilter_Add_2Ux1U_2U_4_7(){
  GaussFilter_Add_2Ux1U_2U_4_7_out1 = (/*cliff*/sc_uint<32>)(
                                      GaussFilter_Add_2Ux1U_2U_4_7_in2.read() + 
                                      1ULL);
}
// resource: GaussFilter_Add_4Ux2U_4U_4  instance: GaussFilter_Add_4Ux2U_4U_4_8
void GaussFilter::GaussFilter_Add_4Ux2U_4U_4_8(){
  GaussFilter_Add_4Ux2U_4U_4_8_out1 = ((sc_uint<4> )s_reg_28.read() + s_reg_24
                                      .read());
}
// resource: GaussFilter_Add_2Ux1U_2U_4  instance: GaussFilter_Add_2Ux1U_2U_4_9
void GaussFilter::GaussFilter_Add_2Ux1U_2U_4_9(){
  GaussFilter_Add_2Ux1U_2U_4_9_out1 = (/*cliff*/sc_uint<32>)((sc_uint<2> )
                                      s_reg_24.read() + 1ULL);
}
void GaussFilter::drive_mask_in1(){
  mask_in1 = GaussFilter_Add_4Ux2U_4U_4_8_out1.read();
}
// resource: mux_32bx2i0c
void GaussFilter::drive_GaussFilter_Mul_32Sx8U_32S_4_10_in2(){
  if ( gs_ctrl2.read() ) {
    GaussFilter_Mul_32Sx8U_32S_4_10_in2 = (sc_int<32> ) (s_reg_31.read());
  } else {
    GaussFilter_Mul_32Sx8U_32S_4_10_in2 = (sc_int<32> ) (mask_out1.read());
  }
}
// resource: mux_8bx3i0c
void GaussFilter::drive_GaussFilter_Mul_32Sx8U_32S_4_10_in1(){
  switch( (sc_uint<2>)(gs_ctrl3.read()) ) {
  default:
    GaussFilter_Mul_32Sx8U_32S_4_10_in1 = (sc_uint<8> )o_rgb_data.read();
    break;
  case 1ULL: 
    GaussFilter_Mul_32Sx8U_32S_4_10_in1 = (sc_uint<8> ) (o_rgb_data.read()
                                          .range(15,8));
    break;
  case 2ULL: 
    GaussFilter_Mul_32Sx8U_32S_4_10_in1 = (sc_uint<8> ) (o_rgb_data.read()
                                          .range(23,16));
    break;
  }
}
// resource: GaussFilter_Mul_32Sx8U_32S_4  instance: GaussFilter_Mul_32Sx8U_32S_4_10
void GaussFilter::GaussFilter_Mul_32Sx8U_32S_4_10(){
  GaussFilter_Mul_32Sx8U_32S_4_10_out1 = GaussFilter_Mul_32Sx8U_32S_4_10_in2
                                         .read() * 
                                         GaussFilter_Mul_32Sx8U_32S_4_10_in1
                                         .read();
}
// resource: mux_32bx3i0c
void GaussFilter::drive_GaussFilter_Add_32Ux32U_32U_4_11_in1(){
  switch( (sc_uint<2>)(gs_ctrl3.read()) ) {
  default:
    GaussFilter_Add_32Ux32U_32U_4_11_in1 = (sc_uint<32> ) (s_reg_25.read());
    break;
  case 1ULL: 
    GaussFilter_Add_32Ux32U_32U_4_11_in1 = (sc_uint<32> ) (s_reg_26.read());
    break;
  case 2ULL: 
    GaussFilter_Add_32Ux32U_32U_4_11_in1 = (sc_uint<32> ) (s_reg_27.read());
    break;
  }
}
// resource: GaussFilter_Add_32Ux32U_32U_4  instance: GaussFilter_Add_32Ux32U_32U_4_11
void GaussFilter::GaussFilter_Add_32Ux32U_32U_4_11(){
  GaussFilter_Add_32Ux32U_32U_4_11_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          GaussFilter_Mul_32Sx8U_32S_4_10_out1
                                          .read() + 
                                          GaussFilter_Add_32Ux32U_32U_4_11_in1
                                          .read());
}
// resource: GaussFilter_OrReduction_4U_1U_4  instance: GaussFilter_OrReduction_4U_1U_4_14
void GaussFilter::GaussFilter_OrReduction_4U_1U_4_14(){
  GaussFilter_OrReduction_4U_1U_4_14_out1 = ((sc_uint<4>)( (sc_uint<4> )s_reg_25
                                            .read() )).or_reduce();
}
// resource: GaussFilter_LessThan_2Ux2U_1U_4  instance: GaussFilter_LessThan_2Ux2U_1U_4_17
void GaussFilter::GaussFilter_LessThan_2Ux2U_1U_4_17(){
  GaussFilter_LessThan_2Ux2U_1U_4_17_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                            s_reg_29.read() < (sc_uint<2> )3ULL)
  ;
}
// resource: mux_1bx3i0c
void GaussFilter::drive_GaussFilter_And_1Ux1U_1U_4_18_in1(){
  switch( (sc_uint<2>)(gs_ctrl5.read()) ) {
  default:
    GaussFilter_And_1Ux1U_1U_4_18_in1 = (sc_uint<1> ) (s_reg_25.read().range(31,
                                        31));
    break;
  case 1ULL: 
    GaussFilter_And_1Ux1U_1U_4_18_in1 = (sc_uint<1> ) (s_reg_26.read().range(31,
                                        31));
    break;
  case 2ULL: 
    GaussFilter_And_1Ux1U_1U_4_18_in1 = (sc_uint<1> ) (s_reg_27.read().range(31,
                                        31));
    break;
  }
}
// resource: GaussFilter_And_1Ux1U_1U_4  instance: GaussFilter_And_1Ux1U_1U_4_18
void GaussFilter::GaussFilter_And_1Ux1U_1U_4_18(){
  GaussFilter_And_1Ux1U_1U_4_18_out1 = s_reg_32.read() & 
                                       GaussFilter_And_1Ux1U_1U_4_18_in1.read();
}
// resource: GaussFilter_LessThan_2Ux2U_1U_4  instance: GaussFilter_LessThan_2Ux2U_1U_4_19
void GaussFilter::GaussFilter_LessThan_2Ux2U_1U_4_19(){
  GaussFilter_LessThan_2Ux2U_1U_4_19_out1 = (/*imp*/sc_uint<1>)((sc_uint<2> )
                                            s_reg_30.read() < (sc_uint<2> )3ULL)
  ;
}
// resource: GaussFilter_OrReduction_4U_1U_4  instance: GaussFilter_OrReduction_4U_1U_4_20
void GaussFilter::GaussFilter_OrReduction_4U_1U_4_20(){
  GaussFilter_OrReduction_4U_1U_4_20_out1 = ((sc_uint<4>)( (sc_uint<4> )s_reg_26
                                            .read() )).or_reduce();
}
// resource: mux_28bx3i0c
void GaussFilter::drive_GaussFilter_Add_28Sx1U_29S_4_21_in2(){
  switch( (sc_uint<2>)(gs_ctrl5.read()) ) {
  default:
    GaussFilter_Add_28Sx1U_29S_4_21_in2 = (sc_int<28> ) (((/*imp*/sc_uint<28> ) 
                                          s_reg_25.read().range(31,4)));
    break;
  case 1ULL: 
    GaussFilter_Add_28Sx1U_29S_4_21_in2 = (sc_int<28> ) (((/*imp*/sc_uint<28> ) 
                                          s_reg_26.read().range(31,4)));
    break;
  case 2ULL: 
    GaussFilter_Add_28Sx1U_29S_4_21_in2 = (sc_int<28> ) (((/*imp*/sc_uint<28> ) 
                                          s_reg_27.read().range(31,4)));
    break;
  }
}
// resource: GaussFilter_Add_28Sx1U_29S_4  instance: GaussFilter_Add_28Sx1U_29S_4_21
void GaussFilter::GaussFilter_Add_28Sx1U_29S_4_21(){
  GaussFilter_Add_28Sx1U_29S_4_21_out1 = (/*cliff*/sc_int<32>)(
                                         GaussFilter_Add_28Sx1U_29S_4_21_in2
                                         .read() + 
                                         GaussFilter_And_1Ux1U_1U_4_18_out1
                                         .read());
}
void GaussFilter::drive_GaussFilter_N_Mux_29_2_0_4_22_ctrl1(){
  GaussFilter_N_Mux_29_2_0_4_22_ctrl1 = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
                                        GaussFilter_Add_28Sx1U_29S_4_21_out1
                                        .read().range(28,28)));
}
// resource: GaussFilter_N_Mux_29_2_0_4
void GaussFilter::GaussFilter_N_Mux_29_2_0_4_22(){
  if ( GaussFilter_N_Mux_29_2_0_4_22_ctrl1.read() ) {
    GaussFilter_N_Mux_29_2_0_4_22_out1 = 0ULL;
  } else {
    GaussFilter_N_Mux_29_2_0_4_22_out1 = (sc_uint<29> ) (
                                         GaussFilter_Add_28Sx1U_29S_4_21_out1
                                         .read());
  }
}
// resource: GaussFilter_LessThan_29Sx9S_1U_4  instance: GaussFilter_LessThan_29Sx9S_1U_4_23
void GaussFilter::GaussFilter_LessThan_29Sx9S_1U_4_23(){
  GaussFilter_LessThan_29Sx9S_1U_4_23_out1 = (/*imp*/sc_uint<1>)((sc_int<29> )
                                             GaussFilter_N_Mux_29_2_0_4_22_out1
                                             .read() < (sc_int<9> )255LL);
}
// resource: GaussFilter_N_Mux_8_2_1_4
void GaussFilter::GaussFilter_N_Mux_8_2_1_4_24(){
  if ( GaussFilter_LessThan_29Sx9S_1U_4_23_out1.read() ) {
    GaussFilter_N_Mux_8_2_1_4_24_out1 = (sc_uint<8> )
                                        GaussFilter_N_Mux_29_2_0_4_22_out1
                                        .read();
  } else {
    GaussFilter_N_Mux_8_2_1_4_24_out1 = 255ULL;
  }
}
// resource: GaussFilter_OrReduction_4U_1U_4  instance: GaussFilter_OrReduction_4U_1U_4_26
void GaussFilter::GaussFilter_OrReduction_4U_1U_4_26(){
  GaussFilter_OrReduction_4U_1U_4_26_out1 = ((sc_uint<4>)( (sc_uint<4> )s_reg_27
                                            .read() )).or_reduce();
}
// resource: regr_en_sc_4
void GaussFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_4bx2i1c
void GaussFilter::drive_global_state_next(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 9ULL: 
    global_state_next = 1ULL;
    break;
  case 5ULL: 
    if ( GaussFilter_LessThan_2Ux2U_1U_4_17_out1.read() ) {
      global_state_next = 1ULL;
    } else {
      if ( GaussFilter_LessThan_2Ux2U_1U_4_19_out1.read() ) {
        global_state_next = 1ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void GaussFilter::drive_gs_ctrl0(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl0 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl0 = 0ULL;
        break;
      case 5ULL: 
        gs_ctrl0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void GaussFilter::drive_gs_ctrl2(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl2 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl2 = 0ULL;
        break;
      case 3ULL: case 4ULL: 
        gs_ctrl2 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void GaussFilter::drive_gs_ctrl3(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl3 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl3 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl3 = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl3 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void GaussFilter::drive_gs_ctrl5(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl5 = 0ULL;
        break;
      case 6ULL: 
        gs_ctrl5 = 1ULL;
        break;
      case 7ULL: 
        gs_ctrl5 = 2ULL;
        break;
      }
      break;
    }
  }
}
void GaussFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               GaussFilter_gen_busy_r_4_38_out1.read().range(2,2)));
}
// resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_38
void GaussFilter::GaussFilter_gen_busy_r_4_38_p8(){
  GaussFilter_gen_busy_r_4_38_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)
                                     ((sc_bv<1>)(
                                     GaussFilter_gen_busy_r_4_38_gnew_req.read()
                                     ), 
                                     (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                     (sc_bv<1>)(GaussFilter_gen_busy_r_4_38_gdiv
                                     .read()), 
                                     (sc_bv<1>)(GaussFilter_gen_busy_r_4_38_gen_busy_i_rgb_m_data_is_invalid_next
                                     .read())) ))) ));
}
// resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_38
void GaussFilter::GaussFilter_gen_busy_r_4_38_p7(){
  GaussFilter_gen_busy_r_4_38_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)GaussFilter_gen_busy_r_4_38_gdiv
                                                                      .read();
}
// resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_38
void GaussFilter::GaussFilter_gen_busy_r_4_38_p6(){
  GaussFilter_gen_busy_r_4_38_gdiv = (sc_uint<1> ) (i_rgb_vld.read() & !
                                     GaussFilter_gen_busy_r_4_38_gnew_req.read()
                                     );
}
// resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_38
void GaussFilter::GaussFilter_gen_busy_r_4_38_p5(){
  GaussFilter_gen_busy_r_4_38_gnew_req = (sc_uint<1> ) (i_rgb_m_busy_req_0
                                         .read() & ( i_rgb_m_unvalidated_req
                                         .read() | (sc_uint<1> )i_rgb_vld.read()
                                          ));
}
// resource: regr_ss_1
void GaussFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (GaussFilter_N_Muxb_1_2_2_4_4_out1
                              .read());
  }
}
// resource: GaussFilter_N_Muxb_1_2_2_4
void GaussFilter::GaussFilter_N_Muxb_1_2_2_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    GaussFilter_N_Muxb_1_2_2_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                        .read());
  } else {
    GaussFilter_N_Muxb_1_2_2_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void GaussFilter::drive_o_rgb_vld(){
  o_rgb_vld = (sc_uint<1> ) (GaussFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: GaussFilter_Or_1Ux1U_1U_4  instance: GaussFilter_Or_1Ux1U_1U_4_2
void GaussFilter::GaussFilter_Or_1Ux1U_1U_4_2(){
  GaussFilter_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (o_rgb_m_unacked_req.read()
                                      | (sc_uint<1>)
                                     GaussFilter_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void GaussFilter::drive_o_rgb_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_rgb_m_unacked_req = 0ULL;
  } else {
    o_rgb_m_unacked_req = (sc_uint<1> ) (GaussFilter_And_1Ux1U_1U_4_36_out1
                          .read());
  }
}
// resource: GaussFilter_And_1Ux1U_1U_4  instance: GaussFilter_And_1Ux1U_1U_4_36
void GaussFilter::GaussFilter_And_1Ux1U_1U_4_36(){
  GaussFilter_And_1Ux1U_1U_4_36_out1 = o_rgb_busy.read() & o_rgb_vld.read();
}
// resource: GaussFilter_Xor_1Ux1U_1U_1  instance: GaussFilter_Xor_1Ux1U_1U_1_1
void GaussFilter::GaussFilter_Xor_1Ux1U_1U_1_1(){
  GaussFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_rgb_m_req_m_trig_req
                                      .read() ^ o_rgb_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void GaussFilter::drive_o_rgb_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_rgb_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_rgb_m_req_m_prev_trig_req = o_rgb_m_req_m_trig_req.read();
  }
}
// resource: GaussFilter_Not_1U_1U_1  instance: GaussFilter_Not_1U_1U_1_3
void GaussFilter::GaussFilter_Not_1U_1U_1_3(){
  GaussFilter_Not_1U_1U_1_3_out1 = !o_rgb_m_req_m_trig_req.read();
}
