// Generated by stratus_hls 19.12-s100  (91710.131054)
// Tue Apr 12 14:52:35 2022
// from ../GaussFilter.cpp

`timescale 1ps / 1ps

      
module GaussFilter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [31:0] o_result_data;
      reg [31:0] o_result_data;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire GaussFilter_Xor_1Ux1U_1U_1_1_out1;
      wire GaussFilter_Or_1Ux1U_1U_4_2_out1;
      reg GaussFilter_N_Muxb_1_2_16_4_4_out1;
      reg i_rgb_m_unvalidated_req;
      wire GaussFilter_gen_busy_r_4_28_gnew_req;
      wire GaussFilter_gen_busy_r_4_28_gdiv;
      wire GaussFilter_gen_busy_r_4_28_gen_busy_i_rgb_m_data_is_invalid_next;
      reg[2:0] global_state_next;
      /*signed*/reg[31:0] GaussFilter_Add2Mul2s32s32s32_4_25_in3;
      reg[31:0] GaussFilter_N_Mux_32_2_27_4_23_out1;
      reg GaussFilter_N_Mux_32_2_27_4_23_ctrl1;
      /*signed*/reg[31:0] GaussFilter_N_Mux_32_2_27_4_23_in2;
      /*signed*/reg[31:0] GaussFilter_N_Mux_32_2_27_4_23_in3;
      reg gs_ctrl4;
      wire[31:0] GaussFilter_Add_32Ux32U_32U_4_18_out1;
      /*signed*/wire[31:0] GaussFilter_Mul_32Sx8U_32S_4_17_out1;
      reg[31:0] GaussFilter_N_Mux_32_2_27_4_15_out1;
      wire[4:0] GaussFilter_Add2u2Mul2i3Add2u2u2_4_14_out1;
      reg[1:0] GaussFilter_N_Mux_2_2_26_4_13_out1;
      reg GaussFilter_N_Mux_2_2_26_4_13_ctrl1;
      reg gs_ctrl3;
      wire[9:0] GaussFilter_Add3u8u8u8_4_9_out1;
      wire[7:0] GaussFilter_Add3u8u8u8_4_9_in1;
      wire[7:0] GaussFilter_Add3u8u8u8_4_9_in2;
      reg GaussFilter_Add2i1u1_4_6_in1;
      reg gs_ctrl0;
      reg s_reg_27_slice;
      wire[1:0] GaussFilter_Add_2Ux1U_2U_4_12_out1;
      wire[1:0] GaussFilter_Add_2Ux1U_2U_4_11_out1;
      wire[7:0] GaussFilter_Div_8U_15_4_10_out1;
      reg[7:0] s_reg_24;
      reg[1:0] s_reg_26;
      reg[1:0] s_reg_23;
      reg[1:0] s_reg_25;
      reg[1:0] s_reg_22;
      reg[31:0] GaussFilter_N_Mux_32_2_27_4_20_out1;
      reg[31:0] GaussFilter_N_Mux_32_2_27_4_8_out1;
      reg[31:0] s_reg_21;
      reg[31:0] GaussFilter_N_Mux_32_2_27_4_19_out1;
      reg[31:0] GaussFilter_N_Mux_32_2_24_4_7_out1;
      reg[31:0] s_reg_20;
      wire GaussFilter_And_1Ux1U_1U_4_26_out1;
      wire[2:0] GaussFilter_gen_busy_r_4_28_out1;
      wire GaussFilter_Not_1U_1U_1_3_out1;
      wire[1:0] GaussFilter_Add2i1u1_4_24_out1;
      reg o_result_m_req_m_trig_req;
      wire GaussFilter_Lti3u2_4_21_out1;
      wire GaussFilter_Lti3u2_4_22_out1;
      wire[1:0] GaussFilter_Add2i1u1_4_16_out1;
      wire[1:0] GaussFilter_Add2i1u1_4_6_out1;
      reg[2:0] global_state;
      reg i_rgb_m_busy_req_0;
      /*signed*/wire[31:0] GaussFilter_Add2Mul2s32s32s32_4_25_out1;
      reg stall0;
      wire[4:0] mask_in1;
      wire[31:0] mask_out1;

         GaussFilter_ROM_18X32_mask mask(
                                      .in1( mask_in1 ),
                                      .out1( mask_out1 ),
                                      .clk( i_clk )
                                    );

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  o_result_data <= GaussFilter_Add2Mul2s32s32s32_4_25_out1;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd1, 3'd7:                         begin
                           if (GaussFilter_Add2i1u1_4_6_out1[1]) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                        3'd2:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        3'd4:                         begin
                           if (2'd2 == GaussFilter_Add2i1u1_4_16_out1) begin
                              if (GaussFilter_Lti3u2_4_22_out1) begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                              else begin
                                 if (GaussFilter_Lti3u2_4_21_out1) begin
                                    i_rgb_m_busy_req_0 <= 1'd0;
                                 end
                              end
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd4:                         begin
                           if (2'd2 == GaussFilter_Add2i1u1_4_16_out1 && (!GaussFilter_Lti3u2_4_22_out1 && (!GaussFilter_Lti3u2_4_21_out1 && 2'd2 == GaussFilter_Add2i1u1_4_24_out1))) begin
                              o_result_m_req_m_trig_req <= GaussFilter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                        3'd5:                         begin
                           if (2'd2 == GaussFilter_Add2i1u1_4_24_out1) begin
                              o_result_m_req_m_trig_req <= GaussFilter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(GaussFilter_And_1Ux1U_1U_4_26_out1 or GaussFilter_gen_busy_r_4_28_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               3'd2:                begin
                  stall0 = GaussFilter_gen_busy_r_4_28_out1[0];
               end
               
               3'd6:                begin
                  stall0 = GaussFilter_And_1Ux1U_1U_4_26_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_32bx2i0c
         // resource: regr_en_sc_32
         always @(posedge i_clk)
          begin :drive_s_reg_20
            if (i_rst == 1'b0) begin
               s_reg_20 <= 32'd0000000000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd1, 3'd7:                         begin
                           s_reg_20 <= GaussFilter_N_Mux_32_2_24_4_7_out1;
                        end
                        
                        3'd4:                         begin
                           s_reg_20 <= GaussFilter_N_Mux_32_2_27_4_19_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_32bx2i0c
         // resource: regr_en_sc_32
         always @(posedge i_clk)
          begin :drive_s_reg_21
            if (i_rst == 1'b0) begin
               s_reg_21 <= 32'd0000000000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd1, 3'd7:                         begin
                           s_reg_21 <= GaussFilter_N_Mux_32_2_27_4_8_out1;
                        end
                        
                        3'd4:                         begin
                           s_reg_21 <= GaussFilter_N_Mux_32_2_27_4_20_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_22
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd7:                      begin
                        s_reg_22 <= 2'd0;
                     end
                     
                     3'd4:                      begin
                        if (2'd2 == GaussFilter_Add2i1u1_4_16_out1) begin
                           if (GaussFilter_Lti3u2_4_22_out1) begin
                           end
                           else begin
                              if (GaussFilter_Lti3u2_4_21_out1) begin
                                 s_reg_22 <= s_reg_25;
                              end
                              else begin
                                 if (2'd2 != GaussFilter_Add2i1u1_4_24_out1) begin
                                    s_reg_22 <= GaussFilter_Add2i1u1_4_24_out1;
                                 end
                              end
                           end
                        end
                     end
                     
                     3'd5:                      begin
                        if (2'd2 != GaussFilter_Add2i1u1_4_24_out1) begin
                           s_reg_22 <= GaussFilter_Add2i1u1_4_24_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx3i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_23
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd1, 3'd7:                      begin
                        if (GaussFilter_Add2i1u1_4_6_out1[1]) begin
                           s_reg_23 <= 2'd0;
                        end
                        else begin
                           s_reg_23 <= GaussFilter_Add2i1u1_4_6_out1;
                        end
                     end
                     
                     3'd4:                      begin
                        if (2'd2 == GaussFilter_Add2i1u1_4_16_out1) begin
                           if (GaussFilter_Lti3u2_4_22_out1) begin
                              s_reg_23 <= s_reg_26;
                           end
                           else begin
                              s_reg_23 <= 2'd0;
                           end
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_24
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd2:                      begin
                        s_reg_24 <= GaussFilter_Div_8U_15_4_10_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_25
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd3:                      begin
                        s_reg_25 <= GaussFilter_Add_2Ux1U_2U_4_11_out1;
                     end
                     
                     3'd4:                      begin
                        if (2'd2 != GaussFilter_Add2i1u1_4_16_out1) begin
                           s_reg_25 <= GaussFilter_Add_2Ux1U_2U_4_11_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_26
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd3:                      begin
                        s_reg_26 <= GaussFilter_Add_2Ux1U_2U_4_12_out1;
                     end
                     
                     3'd4:                      begin
                        if (2'd2 != GaussFilter_Add2i1u1_4_16_out1) begin
                           s_reg_26 <= GaussFilter_Add_2Ux1U_2U_4_12_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_27_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd3:                      begin
                        s_reg_27_slice <= 1'b0;
                     end
                     
                     3'd4:                      begin
                        if (2'd2 != GaussFilter_Add2i1u1_4_16_out1) begin
                           s_reg_27_slice <= GaussFilter_Add2i1u1_4_16_out1[0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         always @(s_reg_23[0] or gs_ctrl0)
          begin :drive_GaussFilter_Add2i1u1_4_6_in1
            if (gs_ctrl0) begin
               GaussFilter_Add2i1u1_4_6_in1 = s_reg_23[0];
            end
            else begin
               GaussFilter_Add2i1u1_4_6_in1 = 1'b0;
            end
         end

         // resource: GaussFilter_Add2i1u1_4  instance: GaussFilter_Add2i1u1_4_6
         assign GaussFilter_Add2i1u1_4_6_out1 = {1'b0, GaussFilter_Add2i1u1_4_6_in1} + 2'd1;

         // resource: GaussFilter_N_Mux_32_2_24_4
         always @(s_reg_20 or GaussFilter_Add2i1u1_4_6_in1)
          begin :GaussFilter_N_Mux_32_2_24_4_7
            if (GaussFilter_Add2i1u1_4_6_in1) begin
               GaussFilter_N_Mux_32_2_24_4_7_out1 = 32'd0000000000;
            end
            else begin
               GaussFilter_N_Mux_32_2_24_4_7_out1 = s_reg_20;
            end
         end

         // resource: GaussFilter_N_Mux_32_2_27_4
         always @(s_reg_21 or GaussFilter_Add2i1u1_4_6_in1)
          begin :GaussFilter_N_Mux_32_2_27_4_8
            if (GaussFilter_Add2i1u1_4_6_in1) begin
               GaussFilter_N_Mux_32_2_27_4_8_out1 = s_reg_21;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_8_out1 = 32'd0000000000;
            end
         end

         // instance: drive_GaussFilter_Add3u8u8u8_4_9_in2
         assign GaussFilter_Add3u8u8u8_4_9_in2 = i_rgb_data[15:8];

         // instance: drive_GaussFilter_Add3u8u8u8_4_9_in1
         assign GaussFilter_Add3u8u8u8_4_9_in1 = i_rgb_data[23:16];

         // resource: GaussFilter_Add3u8u8u8_4  instance: GaussFilter_Add3u8u8u8_4_9
         assign GaussFilter_Add3u8u8u8_4_9_out1 = {2'b00, i_rgb_data[7:0]} + {2'b00, GaussFilter_Add3u8u8u8_4_9_in2} + {2'b00, GaussFilter_Add3u8u8u8_4_9_in1};

         // resource: GaussFilter_Div_8U_15_4  instance: GaussFilter_Div_8U_15_4_10
         assign GaussFilter_Div_8U_15_4_10_out1 = GaussFilter_Add3u8u8u8_4_9_out1 / 2'd3;

         // resource: GaussFilter_Add_2Ux1U_2U_4  instance: GaussFilter_Add_2Ux1U_2U_4_11
         assign GaussFilter_Add_2Ux1U_2U_4_11_out1 = s_reg_22 + 2'd1;

         // resource: GaussFilter_Add_2Ux1U_2U_4  instance: GaussFilter_Add_2Ux1U_2U_4_12
         assign GaussFilter_Add_2Ux1U_2U_4_12_out1 = s_reg_23 + 2'd1;

         // resource: mux_1bx2i1c
         always @(GaussFilter_Add2i1u1_4_16_out1[0] or gs_ctrl3)
          begin :drive_GaussFilter_N_Mux_2_2_26_4_13_ctrl1
            if (gs_ctrl3) begin
               GaussFilter_N_Mux_2_2_26_4_13_ctrl1 = GaussFilter_Add2i1u1_4_16_out1[0];
            end
            else begin
               GaussFilter_N_Mux_2_2_26_4_13_ctrl1 = 1'b0;
            end
         end

         // resource: GaussFilter_N_Mux_2_2_26_4
         always @(GaussFilter_N_Mux_2_2_26_4_13_ctrl1)
          begin :GaussFilter_N_Mux_2_2_26_4_13
            if (GaussFilter_N_Mux_2_2_26_4_13_ctrl1) begin
               GaussFilter_N_Mux_2_2_26_4_13_out1 = 2'd3;
            end
            else begin
               GaussFilter_N_Mux_2_2_26_4_13_out1 = 2'd0;
            end
         end

         // resource: GaussFilter_Add2u2Mul2i3Add2u2u2_4  instance: GaussFilter_Add2u2Mul2i3Add2u2u2_4_14
         assign GaussFilter_Add2u2Mul2i3Add2u2u2_4_14_out1 = ({3'b000, GaussFilter_N_Mux_2_2_26_4_13_out1} + {3'b000, s_reg_23})*5'd03 + {3'b000, s_reg_22};

         // resource: GaussFilter_N_Mux_32_2_27_4
         always @(s_reg_20 or s_reg_21 or s_reg_27_slice)
          begin :GaussFilter_N_Mux_32_2_27_4_15
            if (s_reg_27_slice) begin
               GaussFilter_N_Mux_32_2_27_4_15_out1 = s_reg_20;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_15_out1 = s_reg_21;
            end
         end

         // resource: GaussFilter_Add2i1u1_4  instance: GaussFilter_Add2i1u1_4_16
         assign GaussFilter_Add2i1u1_4_16_out1 = {1'b0, s_reg_27_slice} + 2'd1;

         // instance: drive_mask_in1
         assign mask_in1 = GaussFilter_Add2u2Mul2i3Add2u2u2_4_14_out1;

         // resource: GaussFilter_Mul_32Sx8U_32S_4  instance: GaussFilter_Mul_32Sx8U_32S_4_17
         assign GaussFilter_Mul_32Sx8U_32S_4_17_out1 = mask_out1*{24'b000000000000000000000000, s_reg_24};

         // resource: GaussFilter_Add_32Ux32U_32U_4  instance: GaussFilter_Add_32Ux32U_32U_4_18
         assign GaussFilter_Add_32Ux32U_32U_4_18_out1 = GaussFilter_N_Mux_32_2_27_4_15_out1 + GaussFilter_Mul_32Sx8U_32S_4_17_out1;

         // resource: GaussFilter_N_Mux_32_2_27_4
         always @(s_reg_20 or GaussFilter_Add_32Ux32U_32U_4_18_out1 or s_reg_27_slice)
          begin :GaussFilter_N_Mux_32_2_27_4_19
            if (s_reg_27_slice) begin
               GaussFilter_N_Mux_32_2_27_4_19_out1 = GaussFilter_Add_32Ux32U_32U_4_18_out1;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_19_out1 = s_reg_20;
            end
         end

         // resource: GaussFilter_N_Mux_32_2_27_4
         always @(s_reg_21 or GaussFilter_Add_32Ux32U_32U_4_18_out1 or s_reg_27_slice)
          begin :GaussFilter_N_Mux_32_2_27_4_20
            if (s_reg_27_slice) begin
               GaussFilter_N_Mux_32_2_27_4_20_out1 = s_reg_21;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_20_out1 = GaussFilter_Add_32Ux32U_32U_4_18_out1;
            end
         end

         // resource: GaussFilter_Lti3u2_4  instance: GaussFilter_Lti3u2_4_21
         assign GaussFilter_Lti3u2_4_21_out1 = s_reg_25 < 2'd3;

         // resource: GaussFilter_Lti3u2_4  instance: GaussFilter_Lti3u2_4_22
         assign GaussFilter_Lti3u2_4_22_out1 = s_reg_26 < 2'd3;

         // resource: mux_32bx2i0c
         always @(s_reg_21 or GaussFilter_N_Mux_32_2_27_4_20_out1 or gs_ctrl4)
          begin :drive_GaussFilter_N_Mux_32_2_27_4_23_in3
            if (gs_ctrl4) begin
               GaussFilter_N_Mux_32_2_27_4_23_in3 = s_reg_21;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_23_in3 = GaussFilter_N_Mux_32_2_27_4_20_out1;
            end
         end

         // resource: mux_32bx2i0c
         always @(s_reg_20 or GaussFilter_N_Mux_32_2_27_4_19_out1 or gs_ctrl4)
          begin :drive_GaussFilter_N_Mux_32_2_27_4_23_in2
            if (gs_ctrl4) begin
               GaussFilter_N_Mux_32_2_27_4_23_in2 = s_reg_20;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_23_in2 = GaussFilter_N_Mux_32_2_27_4_19_out1;
            end
         end

         // resource: mux_1bx2i1c
         always @(s_reg_22[0] or gs_ctrl4)
          begin :drive_GaussFilter_N_Mux_32_2_27_4_23_ctrl1
            if (gs_ctrl4) begin
               GaussFilter_N_Mux_32_2_27_4_23_ctrl1 = s_reg_22[0];
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_23_ctrl1 = 1'b0;
            end
         end

         // resource: GaussFilter_N_Mux_32_2_27_4
         always @(GaussFilter_N_Mux_32_2_27_4_23_in3 or GaussFilter_N_Mux_32_2_27_4_23_in2 or GaussFilter_N_Mux_32_2_27_4_23_ctrl1)
          begin :GaussFilter_N_Mux_32_2_27_4_23
            if (GaussFilter_N_Mux_32_2_27_4_23_ctrl1) begin
               GaussFilter_N_Mux_32_2_27_4_23_out1 = GaussFilter_N_Mux_32_2_27_4_23_in2;
            end
            else begin
               GaussFilter_N_Mux_32_2_27_4_23_out1 = GaussFilter_N_Mux_32_2_27_4_23_in3;
            end
         end

         // resource: GaussFilter_Add2i1u1_4  instance: GaussFilter_Add2i1u1_4_24
         assign GaussFilter_Add2i1u1_4_24_out1 = {1'b0, GaussFilter_N_Mux_32_2_27_4_23_ctrl1} + 2'd1;

         // resource: mux_32bx2i1c
         always @(o_result_data or gs_ctrl4)
          begin :drive_GaussFilter_Add2Mul2s32s32s32_4_25_in3
            if (gs_ctrl4) begin
               GaussFilter_Add2Mul2s32s32s32_4_25_in3 = o_result_data;
            end
            else begin
               GaussFilter_Add2Mul2s32s32s32_4_25_in3 = 32'd0000000000;
            end
         end

         // resource: GaussFilter_Add2Mul2s32s32s32_4  instance: GaussFilter_Add2Mul2s32s32s32_4_25
         assign GaussFilter_Add2Mul2s32s32s32_4_25_out1 = GaussFilter_Add2Mul2s32s32s32_4_25_in3 + GaussFilter_N_Mux_32_2_27_4_23_out1*GaussFilter_N_Mux_32_2_27_4_23_out1;

         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i5c
         always @(GaussFilter_Add2i1u1_4_6_out1[1] or GaussFilter_Add2i1u1_4_16_out1 or GaussFilter_Lti3u2_4_21_out1 or GaussFilter_Lti3u2_4_22_out1 or GaussFilter_Add2i1u1_4_24_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               3'd0, 3'd1, 3'd7:                begin
                  if (GaussFilter_Add2i1u1_4_6_out1[1]) begin
                     global_state_next = 3'd2;
                  end
                  else begin
                     global_state_next = 3'd1;
                  end
               end
               
               3'd4:                begin
                  case (GaussFilter_Add2i1u1_4_16_out1) 

                     2'd2:                      begin
                        if (GaussFilter_Lti3u2_4_22_out1) begin
                           global_state_next = 3'd2;
                        end
                        else begin
                           if (GaussFilter_Lti3u2_4_21_out1) begin
                              global_state_next = 3'd2;
                           end
                           else begin
                              case (GaussFilter_Add2i1u1_4_24_out1) 

                                 2'd2:                                  begin
                                    global_state_next = 3'd6;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = global_state + 3'd1;
                                 end
                                 
                              endcase

                           end
                        end
                     end
                     
                     default:                      begin
                        global_state_next = 3'd4;
                     end
                     
                  endcase

               end
               
               3'd5:                begin
                  case (GaussFilter_Add2i1u1_4_24_out1) 

                     2'd2:                      begin
                        global_state_next = global_state + 3'd1;
                     end
                     
                     default:                      begin
                        global_state_next = 3'd5;
                     end
                     
                  endcase

               end
               
               default:                begin
                  global_state_next = global_state + 3'd1;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd1:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd4:                         begin
                           gs_ctrl3 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl4
            if (i_rst == 1'b0) begin
               gs_ctrl4 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd5:                         begin
                           gs_ctrl4 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl4 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = GaussFilter_gen_busy_r_4_28_out1[2];

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_28
         assign GaussFilter_gen_busy_r_4_28_out1 = {GaussFilter_gen_busy_r_4_28_gnew_req, {GaussFilter_gen_busy_r_4_28_gdiv, GaussFilter_gen_busy_r_4_28_gen_busy_i_rgb_m_data_is_invalid_next}};

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_28
         assign GaussFilter_gen_busy_r_4_28_gen_busy_i_rgb_m_data_is_invalid_next = ~GaussFilter_gen_busy_r_4_28_gdiv;

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_28
         assign GaussFilter_gen_busy_r_4_28_gdiv = i_rgb_vld & !GaussFilter_gen_busy_r_4_28_gnew_req;

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_28
         assign GaussFilter_gen_busy_r_4_28_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= GaussFilter_N_Muxb_1_2_16_4_4_out1;
            end
         end

         // resource: GaussFilter_N_Muxb_1_2_16_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :GaussFilter_N_Muxb_1_2_16_4_4
            if (i_rgb_m_busy_req_0) begin
               GaussFilter_N_Muxb_1_2_16_4_4_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               GaussFilter_N_Muxb_1_2_16_4_4_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = GaussFilter_Or_1Ux1U_1U_4_2_out1;

         // resource: GaussFilter_Or_1Ux1U_1U_4  instance: GaussFilter_Or_1Ux1U_1U_4_2
         assign GaussFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | GaussFilter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= GaussFilter_And_1Ux1U_1U_4_26_out1;
            end
         end

         // resource: GaussFilter_And_1Ux1U_1U_4  instance: GaussFilter_And_1Ux1U_1U_4_26
         assign GaussFilter_And_1Ux1U_1U_4_26_out1 = o_result_busy & o_result_vld;

         // resource: GaussFilter_Xor_1Ux1U_1U_1  instance: GaussFilter_Xor_1Ux1U_1U_1_1
         assign GaussFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: GaussFilter_Not_1U_1U_1  instance: GaussFilter_Not_1U_1U_1_3
         assign GaussFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;


endmodule

