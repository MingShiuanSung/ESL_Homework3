// Generated by stratus_hls 19.12-s100  (91710.131054)
// Tue Apr 12 21:25:06 2022
// from ../GaussFilter.cpp

`timescale 1ps / 1ps

      
module GaussFilter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_rgb_busy, o_rgb_vld, o_rgb_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_rgb_busy;
      output i_rgb_busy;
      output o_rgb_vld;
      output [23:0] o_rgb_data;
      reg [23:0] o_rgb_data;
      reg o_rgb_m_req_m_prev_trig_req;
      reg o_rgb_m_unacked_req;
      wire GaussFilter_Xor_1Ux1U_1U_1_1_out1;
      wire GaussFilter_Or_1Ux1U_1U_4_2_out1;
      reg GaussFilter_N_Muxb_1_2_14_4_4_out1;
      reg i_rgb_m_unvalidated_req;
      wire GaussFilter_gen_busy_r_4_34_gnew_req;
      wire GaussFilter_gen_busy_r_4_34_gdiv;
      wire GaussFilter_gen_busy_r_4_34_gen_busy_i_rgb_m_data_is_invalid_next;
      reg[2:0] global_state_next;
      wire GaussFilter_Lti255s29_4_14_out1;
      reg[28:0] GaussFilter_N_Mux_29_2_19_4_13_out1;
      wire GaussFilter_N_Mux_29_2_19_4_13_ctrl1;
      /*signed*/wire[28:0] GaussFilter_Add_28Sx1U_29S_4_12_out1;
      /*signed*/wire[27:0] GaussFilter_Add_28Sx1U_29S_4_12_in2;
      wire GaussFilter_And_1Ux1U_1U_4_11_out1;
      wire GaussFilter_And_1Ux1U_1U_4_11_in1;
      wire GaussFilter_OrReduction_4U_1U_4_10_out1;
      /*signed*/reg[31:0] GaussFilter_Add2Mul2s32u8s32_4_9_in1;
      reg gs_ctrl2;
      reg[7:0] GaussFilter_Add2Mul2s32u8s32_4_9_in2;
      /*signed*/reg[31:0] GaussFilter_Add2Mul2s32u8s32_4_9_in3;
      reg[1:0] gs_ctrl0;
      wire[3:0] GaussFilter_Add2u2Mul2i3u2_4_6_out1;
      reg[31:0] s_reg_23;
      wire[1:0] GaussFilter_Add2i1u2_4_8_out1;
      wire[1:0] GaussFilter_Add2i1u2_4_7_out1;
      reg[1:0] s_reg_21;
      reg[31:0] s_reg_20;
      reg[31:0] s_reg_19;
      /*signed*/wire[31:0] GaussFilter_Add2Mul2s32u8s32_4_9_out1;
      reg[31:0] s_reg_18;
      reg[1:0] s_reg_22;
      reg[1:0] s_reg_17;
      wire GaussFilter_And_1Ux1U_1U_4_32_out1;
      wire[2:0] GaussFilter_gen_busy_r_4_34_out1;
      wire GaussFilter_Not_1U_1U_1_3_out1;
      reg o_rgb_m_req_m_trig_req;
      reg i_rgb_m_busy_req_0;
      reg[7:0] GaussFilter_N_Mux_8_2_20_4_15_out1;
      reg[7:0] s_reg_25;
      reg[7:0] s_reg_24;
      wire GaussFilter_Lti3u2_4_23_out1;
      wire GaussFilter_Lti3u2_4_31_out1;
      reg[2:0] global_state;
      reg stall0;
      wire[3:0] mask_in1;
      wire[31:0] mask_out1;

         GaussFilter_ROM_9X32_mask mask(
                                     .in1( mask_in1 ),
                                     .out1( mask_out1 ),
                                     .clk( i_clk )
                                   );

         // resource: mux_24bx2i0c
         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_rgb_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd1:                      begin
                        o_rgb_data <= i_rgb_data;
                     end
                     
                     3'd4:                      begin
                        if (!GaussFilter_Lti3u2_4_23_out1 && !GaussFilter_Lti3u2_4_31_out1) begin
                           o_rgb_data <= {GaussFilter_N_Mux_8_2_20_4_15_out1, {s_reg_25, s_reg_24}};
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd6:                         begin
                           i_rgb_m_busy_req_0 <= 1'd0;
                        end
                        
                        3'd1:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        3'd4:                         begin
                           if (GaussFilter_Lti3u2_4_23_out1) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                           else begin
                              if (GaussFilter_Lti3u2_4_31_out1) begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd4:                         begin
                           if (!GaussFilter_Lti3u2_4_23_out1 && !GaussFilter_Lti3u2_4_31_out1) begin
                              o_rgb_m_req_m_trig_req <= GaussFilter_Not_1U_1U_1_3_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(GaussFilter_And_1Ux1U_1U_4_32_out1 or GaussFilter_gen_busy_r_4_34_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               3'd1:                begin
                  stall0 = GaussFilter_gen_busy_r_4_34_out1[0];
               end
               
               3'd5:                begin
                  stall0 = GaussFilter_And_1Ux1U_1U_4_32_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_17
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_17 <= 2'd0;
                     end
                     
                     3'd4:                      begin
                        if (GaussFilter_Lti3u2_4_23_out1) begin
                        end
                        else begin
                           s_reg_17 <= s_reg_22;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i1c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_18
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_18 <= 32'd0000000000;
                     end
                     
                     3'd2:                      begin
                        s_reg_18 <= GaussFilter_Add2Mul2s32u8s32_4_9_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i1c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_19
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_19 <= 32'd0000000000;
                     end
                     
                     3'd3:                      begin
                        s_reg_19 <= GaussFilter_Add2Mul2s32u8s32_4_9_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i1c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_20
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_20 <= 32'd0000000000;
                     end
                     
                     3'd4:                      begin
                        s_reg_20 <= GaussFilter_Add2Mul2s32u8s32_4_9_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_21
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_21 <= 2'd0;
                     end
                     
                     3'd1:                      begin
                        s_reg_21 <= GaussFilter_Add2i1u2_4_7_out1;
                     end
                     
                     3'd4:                      begin
                        if (GaussFilter_Lti3u2_4_23_out1) begin
                        end
                        else begin
                           s_reg_21 <= 2'd0;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_22
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd1:                      begin
                        s_reg_22 <= GaussFilter_Add2i1u2_4_8_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_23
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd2:                      begin
                        s_reg_23 <= mask_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_24
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd2:                      begin
                        s_reg_24 <= GaussFilter_N_Mux_8_2_20_4_15_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_25
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_25 <= GaussFilter_N_Mux_8_2_20_4_15_out1;
               end
               
            endcase

         end

         // resource: GaussFilter_Add2u2Mul2i3u2_4  instance: GaussFilter_Add2u2Mul2i3u2_4_6
         assign GaussFilter_Add2u2Mul2i3u2_4_6_out1 = {2'b00, s_reg_21}*4'd03 + {2'b00, s_reg_17};

         // resource: GaussFilter_Add2i1u2_4  instance: GaussFilter_Add2i1u2_4_7
         assign GaussFilter_Add2i1u2_4_7_out1 = s_reg_21 + 2'd1;

         // resource: GaussFilter_Add2i1u2_4  instance: GaussFilter_Add2i1u2_4_8
         assign GaussFilter_Add2i1u2_4_8_out1 = s_reg_17 + 2'd1;

         // instance: drive_mask_in1
         assign mask_in1 = GaussFilter_Add2u2Mul2i3u2_4_6_out1;

         // resource: mux_32bx3i0c
         always @(s_reg_18 or s_reg_19 or s_reg_20 or gs_ctrl0)
          begin :drive_GaussFilter_Add2Mul2s32u8s32_4_9_in3
            case (gs_ctrl0) 

               2'd1:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in3 = s_reg_19;
               end
               
               2'd2:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in3 = s_reg_20;
               end
               
               default:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in3 = s_reg_18;
               end
               
            endcase

         end

         // resource: mux_8bx3i0c
         always @(o_rgb_data or gs_ctrl0)
          begin :drive_GaussFilter_Add2Mul2s32u8s32_4_9_in2
            case (gs_ctrl0) 

               2'd1:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in2 = o_rgb_data[15:8];
               end
               
               2'd2:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in2 = o_rgb_data[23:16];
               end
               
               default:                begin
                  GaussFilter_Add2Mul2s32u8s32_4_9_in2 = o_rgb_data[7:0];
               end
               
            endcase

         end

         // resource: mux_32bx2i0c
         always @(s_reg_23 or mask_out1 or gs_ctrl2)
          begin :drive_GaussFilter_Add2Mul2s32u8s32_4_9_in1
            if (gs_ctrl2) begin
               GaussFilter_Add2Mul2s32u8s32_4_9_in1 = s_reg_23;
            end
            else begin
               GaussFilter_Add2Mul2s32u8s32_4_9_in1 = mask_out1;
            end
         end

         // resource: GaussFilter_Add2Mul2s32u8s32_4  instance: GaussFilter_Add2Mul2s32u8s32_4_9
         assign GaussFilter_Add2Mul2s32u8s32_4_9_out1 = GaussFilter_Add2Mul2s32u8s32_4_9_in3 + {24'b000000000000000000000000, GaussFilter_Add2Mul2s32u8s32_4_9_in2}*GaussFilter_Add2Mul2s32u8s32_4_9_in1;

         // resource: GaussFilter_OrReduction_4U_1U_4  instance: GaussFilter_OrReduction_4U_1U_4_10
         assign GaussFilter_OrReduction_4U_1U_4_10_out1 = (|GaussFilter_Add2Mul2s32u8s32_4_9_out1[3:0]);

         // instance: drive_GaussFilter_And_1Ux1U_1U_4_11_in1
         assign GaussFilter_And_1Ux1U_1U_4_11_in1 = GaussFilter_Add2Mul2s32u8s32_4_9_out1[31];

         // resource: GaussFilter_And_1Ux1U_1U_4  instance: GaussFilter_And_1Ux1U_1U_4_11
         assign GaussFilter_And_1Ux1U_1U_4_11_out1 = GaussFilter_OrReduction_4U_1U_4_10_out1 & GaussFilter_And_1Ux1U_1U_4_11_in1;

         // instance: drive_GaussFilter_Add_28Sx1U_29S_4_12_in2
         assign GaussFilter_Add_28Sx1U_29S_4_12_in2 = GaussFilter_Add2Mul2s32u8s32_4_9_out1[31:4];

         // resource: GaussFilter_Add_28Sx1U_29S_4  instance: GaussFilter_Add_28Sx1U_29S_4_12
         assign GaussFilter_Add_28Sx1U_29S_4_12_out1 = {GaussFilter_Add_28Sx1U_29S_4_12_in2[27], GaussFilter_Add_28Sx1U_29S_4_12_in2} + {28'b0000000000000000000000000000, GaussFilter_And_1Ux1U_1U_4_11_out1};

         // instance: drive_GaussFilter_N_Mux_29_2_19_4_13_ctrl1
         assign GaussFilter_N_Mux_29_2_19_4_13_ctrl1 = GaussFilter_Add_28Sx1U_29S_4_12_out1[28];

         // resource: GaussFilter_N_Mux_29_2_19_4
         always @(GaussFilter_Add_28Sx1U_29S_4_12_out1 or GaussFilter_N_Mux_29_2_19_4_13_ctrl1)
          begin :GaussFilter_N_Mux_29_2_19_4_13
            if (GaussFilter_N_Mux_29_2_19_4_13_ctrl1) begin
               GaussFilter_N_Mux_29_2_19_4_13_out1 = 29'd000000000;
            end
            else begin
               GaussFilter_N_Mux_29_2_19_4_13_out1 = GaussFilter_Add_28Sx1U_29S_4_12_out1;
            end
         end

         // resource: GaussFilter_Lti255s29_4  instance: GaussFilter_Lti255s29_4_14
         assign GaussFilter_Lti255s29_4_14_out1 = GaussFilter_N_Mux_29_2_19_4_13_out1[28] ^ GaussFilter_N_Mux_29_2_19_4_13_out1 < 29'd000000255;

         // resource: GaussFilter_N_Mux_8_2_20_4
         always @(GaussFilter_N_Mux_29_2_19_4_13_out1[7:0] or GaussFilter_Lti255s29_4_14_out1)
          begin :GaussFilter_N_Mux_8_2_20_4_15
            if (GaussFilter_Lti255s29_4_14_out1) begin
               GaussFilter_N_Mux_8_2_20_4_15_out1 = GaussFilter_N_Mux_29_2_19_4_13_out1[7:0];
            end
            else begin
               GaussFilter_N_Mux_8_2_20_4_15_out1 = 8'd255;
            end
         end

         // resource: GaussFilter_Lti3u2_4  instance: GaussFilter_Lti3u2_4_23
         assign GaussFilter_Lti3u2_4_23_out1 = s_reg_21 < 2'd3;

         // resource: GaussFilter_Lti3u2_4  instance: GaussFilter_Lti3u2_4_31
         assign GaussFilter_Lti3u2_4_31_out1 = s_reg_22 < 2'd3;

         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx2i1c
         always @(GaussFilter_Lti3u2_4_23_out1 or GaussFilter_Lti3u2_4_31_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               3'd0, 3'd6:                begin
                  global_state_next = 3'd1;
               end
               
               3'd4:                begin
                  if (GaussFilter_Lti3u2_4_23_out1) begin
                     global_state_next = 3'd1;
                  end
                  else begin
                     if (GaussFilter_Lti3u2_4_31_out1) begin
                        global_state_next = 3'd1;
                     end
                     else begin
                        global_state_next = global_state + 3'd1;
                     end
                  end
               end
               
               default:                begin
                  global_state_next = global_state + 3'd1;
               end
               
            endcase

         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd3:                         begin
                           gs_ctrl0 <= 2'd1;
                        end
                        
                        3'd4:                         begin
                           gs_ctrl0 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl2
            if (i_rst == 1'b0) begin
               gs_ctrl2 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd3, 3'd4:                         begin
                           gs_ctrl2 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl2 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = GaussFilter_gen_busy_r_4_34_out1[2];

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_34
         assign GaussFilter_gen_busy_r_4_34_out1 = {GaussFilter_gen_busy_r_4_34_gnew_req, {GaussFilter_gen_busy_r_4_34_gdiv, GaussFilter_gen_busy_r_4_34_gen_busy_i_rgb_m_data_is_invalid_next}};

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_34
         assign GaussFilter_gen_busy_r_4_34_gen_busy_i_rgb_m_data_is_invalid_next = ~GaussFilter_gen_busy_r_4_34_gdiv;

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_34
         assign GaussFilter_gen_busy_r_4_34_gdiv = i_rgb_vld & !GaussFilter_gen_busy_r_4_34_gnew_req;

         // resource: GaussFilter_gen_busy_r_4  instance: GaussFilter_gen_busy_r_4_34
         assign GaussFilter_gen_busy_r_4_34_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= GaussFilter_N_Muxb_1_2_14_4_4_out1;
            end
         end

         // resource: GaussFilter_N_Muxb_1_2_14_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :GaussFilter_N_Muxb_1_2_14_4_4
            if (i_rgb_m_busy_req_0) begin
               GaussFilter_N_Muxb_1_2_14_4_4_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               GaussFilter_N_Muxb_1_2_14_4_4_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_rgb_vld
         assign o_rgb_vld = GaussFilter_Or_1Ux1U_1U_4_2_out1;

         // resource: GaussFilter_Or_1Ux1U_1U_4  instance: GaussFilter_Or_1Ux1U_1U_4_2
         assign GaussFilter_Or_1Ux1U_1U_4_2_out1 = o_rgb_m_unacked_req | GaussFilter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_m_unacked_req
            if (i_rst == 1'b0) begin
               o_rgb_m_unacked_req <= 1'd0;
            end
            else begin
               o_rgb_m_unacked_req <= GaussFilter_And_1Ux1U_1U_4_32_out1;
            end
         end

         // resource: GaussFilter_And_1Ux1U_1U_4  instance: GaussFilter_And_1Ux1U_1U_4_32
         assign GaussFilter_And_1Ux1U_1U_4_32_out1 = o_rgb_busy & o_rgb_vld;

         // resource: GaussFilter_Xor_1Ux1U_1U_1  instance: GaussFilter_Xor_1Ux1U_1U_1_1
         assign GaussFilter_Xor_1Ux1U_1U_1_1_out1 = o_rgb_m_req_m_trig_req ^ o_rgb_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_rgb_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_rgb_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_rgb_m_req_m_prev_trig_req <= o_rgb_m_req_m_trig_req;
            end
         end

         // resource: GaussFilter_Not_1U_1U_1  instance: GaussFilter_Not_1U_1U_1_3
         assign GaussFilter_Not_1U_1U_1_3_out1 = !o_rgb_m_req_m_trig_req;


endmodule

